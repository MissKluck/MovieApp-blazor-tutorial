// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieApp.model;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MovieApp.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20250515081748_RenameMoreStuff")]
    partial class RenameMoreStuff
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MovieApp.model.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .HasColumnType("integer")
                        .HasColumnName("genreid");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("genrename");

                    b.HasKey("GenreID")
                        .HasName("genre_pkey");

                    b.ToTable("genre", (string)null);
                });

            modelBuilder.Entity("MovieApp.model.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .HasColumnType("integer")
                        .HasColumnName("movieid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer")
                        .HasColumnName("duration");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("genre");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("language");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("overview");

                    b.Property<string>("Posterpath")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("posterpath");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("numeric(2,1)")
                        .HasColumnName("rating");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.HasKey("MovieID")
                        .HasName("movie_pkey");

                    b.ToTable("movie", (string)null);
                });

            modelBuilder.Entity("MovieApp.model.Usermaster", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("firstname");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("gender");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("password");

                    b.Property<string>("UserTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("usertypename");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("username");

                    b.HasKey("UserID")
                        .HasName("usermaster_pkey");

                    b.ToTable("usermaster", (string)null);
                });

            modelBuilder.Entity("MovieApp.model.Usertype", b =>
                {
                    b.Property<int>("UserTypeID")
                        .HasColumnType("integer")
                        .HasColumnName("usertypeid");

                    b.Property<string>("UserTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("usertypename");

                    b.HasKey("UserTypeID")
                        .HasName("usertype_pkey");

                    b.ToTable("usertype", (string)null);
                });

            modelBuilder.Entity("MovieApp.model.Watchlist", b =>
                {
                    b.Property<string>("WatchlistID")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)")
                        .HasColumnName("watchlistid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datecreated");

                    b.Property<int>("UserID")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("WatchlistID")
                        .HasName("watchlist_pkey");

                    b.ToTable("watchlist", (string)null);
                });

            modelBuilder.Entity("MovieApp.model.Watchlistitem", b =>
                {
                    b.Property<int>("WatchlistItemID")
                        .HasColumnType("integer")
                        .HasColumnName("watchlistitemid");

                    b.Property<int>("MovieID")
                        .HasColumnType("integer")
                        .HasColumnName("movieid");

                    b.Property<string>("WatchlistID")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)")
                        .HasColumnName("watchlistid");

                    b.HasKey("WatchlistItemID")
                        .HasName("watchlistitems_pkey");

                    b.ToTable("watchlistitems", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
